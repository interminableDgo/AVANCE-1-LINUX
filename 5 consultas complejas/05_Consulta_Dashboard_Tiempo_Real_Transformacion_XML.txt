CONSULTA COMPLEJA #5: DASHBOARD CON DATOS EN TIEMPO REAL Y TRANSFORMACIÓN XML
================================================================================

ARCHIVO: microservicios/Dashboards/app.py
FUNCIÓN: get_vitals_gps_data_from_influxdb() y create_xml_response()
COMPLEJIDAD: ALTA - Consultas en tiempo real, procesamiento de datos y transformación XML

DESCRIPCIÓN:
Este microservicio de dashboard proporciona datos de vitales y GPS en tiempo real, combinando
múltiples fuentes de datos de InfluxDB y transformando la información a formato XML para
integración con sistemas externos y visualización.

CONSULTAS INFLUXDB UTILIZADAS:

1. QUERY PARA VITALES EN TIEMPO REAL:
```flux
from(bucket: "my_app_raw_data")
  |> range(start: {start_time}, stop: {end_time})
  |> filter(fn: (r) => r["_measurement"] == "vitals")
  |> filter(fn: (r) => r["patient_id"] == "{patient_id}")
  |> sort(columns: ["_time"])
```

2. QUERY PARA GPS EN TIEMPO REAL:
```flux
from(bucket: "my_app_raw_data")
  |> range(start: {start_time}, stop: {end_time})
  |> filter(fn: (r) => r["_measurement"] == "gps")
  |> filter(fn: (r) => r["patient_id"] == "{patient_id}")
  |> sort(columns: ["_time"])
```

3. QUERY PARA KPIs PROCESADOS:
```flux
from(bucket: "my_app_processed_data")
  |> range(start: {start_time}, stop: {end_time})
  |> filter(fn: (r) => r["_measurement"] == "KPI_daily")
  |> filter(fn: (r) => r["patient_id"] == "{patient_id}")
  |> sort(columns: ["_time"])
```

4. QUERY PARA INFERENCIA DE RIESGO:
```flux
from(bucket: "my_app_processed_data")
  |> range(start: {start_time}, stop: {end_time})
  |> filter(fn: (r) => r["_measurement"] == "Risk_inference")
  |> filter(fn: (r) => r["patient_id"] == "{patient_id}")
  |> sort(columns: ["_time"])
```

PROCESAMIENTO COMPLEJO DE DATOS EN TIEMPO REAL:

1. AGRUPACIÓN TEMPORAL DE VITALES:
   - Agrupación por timestamp exacto
   - Preservación de todos los campos de vitales
   - Ordenamiento cronológico estricto
   - Manejo de campos dinámicos

2. AGRUPACIÓN TEMPORAL DE GPS:
   - Agrupación por timestamp exacto
   - Separación de coordenadas lat/lon
   - Validación de datos GPS completos
   - Estructuración de puntos geográficos

3. PROCESAMIENTO DE KPIs:
   - Agrupación temporal por timestamp
   - Preservación de metadatos
   - Conversión a formato estructurado
   - Ordenamiento cronológico

4. PROCESAMIENTO DE RIESGO:
   - Extracción de metadatos del modelo
   - Preservación de scores y categorías
   - Agrupación temporal
   - Estructuración de datos de riesgo

TRANSFORMACIÓN XML COMPLEJA:

1. GENERACIÓN DINÁMICA DE ELEMENTOS:
   - Creación de elementos XML basados en estructura de datos
   - Manejo de listas y objetos anidados
   - Preservación de jerarquía de datos
   - Timestamp de generación automático

2. ESTRUCTURA XML GENERADA:
```xml
<root timestamp="2025-09-04T05:15:00">
  <vitals>
    <item>
      <timestamp>2025-09-04T05:14:30</timestamp>
      <heart_rate>75</heart_rate>
      <blood_oxygen>98</blood_oxygen>
      <temperature>36.8</temperature>
    </item>
  </vitals>
  <gps>
    <item>
      <timestamp>2025-09-04T05:14:30</timestamp>
      <lat>19.4326</lat>
      <lon>-99.1332</lon>
    </item>
  </gps>
  <kpis>
    <item>
      <timestamp>2025-09-04T05:14:30</timestamp>
      <average_heart_rate>75.5</average_heart_rate>
      <total_distance_traveled>1250.5</total_distance_traveled>
    </item>
  </kpis>
  <risk>
    <item>
      <timestamp>2025-09-04T05:14:30</timestamp>
      <model_name>daily_risk_model</model_name>
      <model_version>1.0</model_version>
      <risk_score>0.3</risk_score>
      <risk_level>3</risk_level>
    </item>
  </risk>
</root>
```

CARACTERÍSTICAS COMPLEJAS:

1. RANGOS TEMPORALES CONFIGURABLES:
   - Configuración flexible de horas (1-24 horas)
   - Cálculo automático de rangos temporales
   - Formato ISO 8601 para timestamps
   - Validación de rangos temporales

2. MANEJO DE MÚLTIPLES FUENTES:
   - Datos crudos de vitales y GPS
   - Datos procesados de KPIs y riesgo
   - Agregación de múltiples mediciones
   - Correlación temporal de datos

3. PROCESAMIENTO ASÍNCRONO:
   - Consultas paralelas a InfluxDB
   - Procesamiento independiente de cada tipo de dato
   - Agregación final de resultados
   - Manejo de errores por tipo de consulta

4. OPTIMIZACIÓN DE MEMORIA:
   - Agrupación temporal eficiente
   - Liberación de recursos después de procesamiento
   - Estructuras de datos optimizadas
   - Manejo de grandes volúmenes de datos

ESTRUCTURA DE DATOS PROCESADOS:

1. DATOS DE VITALES:
   - Timestamp ISO
   - Campos dinámicos según medición
   - Ordenamiento cronológico
   - Validación de datos

2. DATOS DE GPS:
   - Timestamp ISO
   - Coordenadas lat/lon
   - Ordenamiento cronológico
   - Validación de coordenadas

3. DATOS DE KPIs:
   - Timestamp ISO
   - Métricas calculadas
   - Ordenamiento cronológico
   - Metadatos preservados

4. DATOS DE RIESGO:
   - Timestamp ISO
   - Scores y categorías
   - Metadatos del modelo
   - Ordenamiento cronológico

BUCKETS UTILIZADOS:
- my_app_raw_data: Datos crudos de vitales y GPS
- my_app_processed_data: KPIs y datos de riesgo procesados

FORMATOS DE SALIDA:
- JSON: Para APIs y aplicaciones web
- XML: Para integración con sistemas externos
- Estructurado: Para procesamiento posterior

CASOS DE USO:
- Dashboard médico en tiempo real
- Monitoreo continuo de pacientes
- Integración con sistemas hospitalarios
- Generación de reportes XML
- API para aplicaciones móviles
- Análisis de tendencias de salud

NOTAS TÉCNICAS:
- Utiliza InfluxDB Query API
- Procesamiento XML con ElementTree
- Manejo robusto de errores
- Logging detallado de operaciones
- Configuración flexible de parámetros
- Optimización para datos en tiempo real
